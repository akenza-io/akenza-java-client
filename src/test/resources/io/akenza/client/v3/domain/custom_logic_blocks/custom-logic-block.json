{
  "customLogicId": "3700000000000000",
  "organizationId": "2800000000000000",
  "name": "Smart Temperature Alert",
  "description": null,
  "dataSources": [
    {
      "name": "Temperature",
      "description": null,
      "variableName": "temperature",
      "defaultTopic": "default",
      "defaultDataKey": "temperature",
      "lastSample": false,
      "triggerOnUplink": false
    }
  ],
  "properties": [
    {
      "name": "Initial Threshold",
      "description": null,
      "variableName": "initialThreshold",
      "defaultValue": "20",
      "type": "NUMERICAL"
    }
  ],
  "script": "// A smart temperature monitoring rule that uses an adaptive threshold based\n// on the moving average of the temperature.\n// An alert is triggered if the temperature exceeds the adaptive threshold by 20%\n//\n// The threshold starts with an initial threshold and\n// slowly converges (exponential smoothing) to the moving average as data arrives\n// the convergence rate can be controlled by alpha (0 - 1)\n\nfunction consume(event) {\n  const alpha = 0.2;\n  const initialThreshold = Number(event.properties.initialThreshold) || 20;\n  const currentTemperature = Number(event.inputs.temperature);\n\n  let state = event.state || {};\n  let movingAverage = state.movingAverage || 0;\n  let threshold = state.threshold || initialThreshold;\n\n  let numberOfSamples = state.numberOfSamples || 0;\n\n  //compute a moving average\n  movingAverage =\n    (currentTemperature + numberOfSamples * movingAverage) /\n    (numberOfSamples + 1);\n\n  // let's define the threshold by 20% above the average\n  const currentThreshold = movingAverage * 1.2;\n\n  // exponentially smooth the threshold in order to account\n  // for the phase where not much data is present\n  threshold = alpha * currentThreshold + (1 - alpha) * threshold;\n  if (currentTemperature > threshold) {\n    emit(\"action\", {\n      message: `temperature (${currentTemperature} °C) is above threshold (${threshold} °C)`,\n    });\n  }\n\n  numberOfSamples += 1;\n  state = { threshold, numberOfSamples, movingAverage };\n  emit(\"state\", state);\n}\n",
  "rules": [
    {
      "workspaceId": "2900000000000000",
      "name": "Smart Temperature Alert",
      "active": true,
      "id": "2100000000000000"
    }
  ],
  "id": "3700000000000000"
}